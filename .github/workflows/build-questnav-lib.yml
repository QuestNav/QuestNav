name: Build QuestNavLib

on:
  workflow_call:
    inputs:
      versionYear:
        description: 'Current FRC Year'
        required: false
        type: string
      versionMajor:
        description: 'Major version'
        required: false
        type: string
      versionMinor:
        description: 'Minor version'
        required: false
        type: string
      versionPatch:
        description: 'Patch version'
        required: false
        type: string
      wpilibVersion:
        description: 'WPILib version to compile for'
        required: true
        type: string
        default: '2025.3.2'
      versionType:
        description: 'Type of version'
        required: false
        type: string
      releaseToMaven:
        description: 'Whether to release the compiled binaries to the maven repository'
        required: true
        type: boolean
    secrets:
      MAVEN_USERNAME:
        description: 'QuestNav Maven Username'
        required: true
      MAVEN_PASSWORD:
        description: 'QuestNav Maven Password'
        required: true
    outputs:
      json-artifact-name:
        description: The artifact ID for recall of the JSON VendorDep
        value: ${{ jobs.build-questnavlib.outputs.json-artifact-name }}
      json-filename:
        description: The artifact filename for recall of the JSON VendorDep
        value: ${{ jobs.build-questnavlib.outputs.json-filename }}

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  build-questnavlib:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: questnav-lib
    outputs:
      json-artifact-name: ${{ steps.upload.outputs.artifact-id }}
      json-filename: ${{ steps.version-info.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          sparse-checkout: questnav-lib
          sparse-checkout-cone-mode: false

      - name: Determine Version Strategy
        id: version-info
        run: |
          # Check if all required version components are provided
          if [ -n "${{ inputs.versionYear }}" ] && [ -n "${{ inputs.versionMajor }}" ] && [ -n "${{ inputs.versionMinor }}" ] && [ -n "${{ inputs.versionPatch }}" ]; then
            # Use semantic versioning
            VERSION="${{ inputs.versionYear }}-${{ inputs.versionMajor }}.${{ inputs.versionMinor }}.${{ inputs.versionPatch }}"
            if [ -n "${{ inputs.versionType }}" ] && [ "${{ inputs.versionType }}" != "release" ]; then
              VERSION="${VERSION}-${{ inputs.versionType }}"
            fi

            QUESTNAV_VERSION="${{ inputs.versionYear }}-${{ inputs.versionMajor }}.${{ inputs.versionMinor }}.${{ inputs.versionPatch }}"
            FRC_YEAR="${{ inputs.versionYear }}"
            RELEASE_TYPE="${{ inputs.versionType }}"

            echo "strategy=semantic" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "questnav-version=$QUESTNAV_VERSION" >> $GITHUB_OUTPUT
            echo "frc-year=$FRC_YEAR" >> $GITHUB_OUTPUT
            echo "release-type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          else
            # Use hash-based versioning
            COMMIT_HASH=$(git rev-parse --short=7 HEAD)
            CURRENT_YEAR=$(date +%Y)

            # Use hash as the base version, dev as release type
            QUESTNAV_VERSION="$COMMIT_HASH"
            RELEASE_TYPE="dev"
            VERSION="$COMMIT_HASH"
            FRC_YEAR="$CURRENT_YEAR"

            echo "strategy=hash" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "questnav-version=$QUESTNAV_VERSION" >> $GITHUB_OUTPUT
            echo "frc-year=$FRC_YEAR" >> $GITHUB_OUTPUT
            echo "release-type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          fi

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-lib-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-lib-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.11'

      - name: Make gradlew Executable
        run: 'chmod +x ./gradlew'

      - name: Display Build Configuration
        run: |
          ./gradlew buildInfo \
            -PquestnavVersion="${{ steps.version-info.outputs.questnav-version }}" \
            -PreleaseType="${{ steps.version-info.outputs.release-type }}" \
            -PfrcYear="${{ steps.version-info.outputs.frc-year }}" \
            -PwpilibVersion="${{ inputs.wpilibVersion }}"

      - name: Build Library
        run: |
          ./gradlew build \
            -PquestnavVersion="${{ steps.version-info.outputs.questnav-version }}" \
            -PreleaseType="${{ steps.version-info.outputs.release-type }}" \
            -PfrcYear="${{ steps.version-info.outputs.frc-year }}" \
            -PwpilibVersion="${{ inputs.wpilibVersion }}"

      - name: Publish to Maven Repository
        if: ${{ inputs.releaseToMaven == true }}
        run: |
          ./gradlew publish \
            -PquestnavVersion="${{ steps.version-info.outputs.questnav-version }}" \
            -PreleaseType="${{ steps.version-info.outputs.release-type }}" \
            -PfrcYear="${{ steps.version-info.outputs.frc-year }}" \
            -PwpilibVersion="${{ inputs.wpilibVersion }}" \
            -PmavenUsername="${{ secrets.MAVEN_USERNAME }}" \
            -PmavenPassword="${{ secrets.MAVEN_PASSWORD }}"

      - name: Upload Build Artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: 'questnavlib.json'
          path: 'questnav-lib/build/generated/vendordeps/*.json'
          retention-days: 7