/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_QUESTNAV_PROTOS_COMMANDS_COMMANDS_NPB_H_INCLUDED
#define PB_QUESTNAV_PROTOS_COMMANDS_COMMANDS_NPB_H_INCLUDED
#include <pb.h>
#include <span>
#include <string_view>
#include "geometry2d.npb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enum for command types (extensible for future commands) */
typedef enum _questnav_protos_commands_QuestNavCommandType {
    questnav_protos_commands_QuestNavCommandType_COMMAND_TYPE_UNSPECIFIED = 0, /* Default value required in proto3 */
    questnav_protos_commands_QuestNavCommandType_POSE_RESET = 1 /* Reset robot pose to target pose */
} questnav_protos_commands_QuestNavCommandType;

/* Struct definitions */
/* Payload for pose reset command */
typedef struct _questnav_protos_commands_ProtobufQuestNavPoseResetPayload {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    /* Target pose in field-relative WPILib coordinate space (x forward, y left, rotation CCW+) */
    pb_callback_t target_pose;
} questnav_protos_commands_ProtobufQuestNavPoseResetPayload;

/* Main Command message */
typedef struct _questnav_protos_commands_ProtobufQuestNavCommand {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    /* The type of command */
    questnav_protos_commands_QuestNavCommandType type;
    /* Command ID for tracking/responses */
    uint32_t command_id;
    pb_size_t which_payload;
    union {
        pb_callback_t pose_reset_payload; /* Future payloads can be added here:
     (Commands with no payload don't need an entry) */
    } payload;
} questnav_protos_commands_ProtobufQuestNavCommand;

/* Response message for commands */
typedef struct _questnav_protos_commands_ProtobufQuestNavCommandResponse {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    /* Matches the original command ID */
    uint32_t command_id;
    /* Whether the command was successful */
    bool success;
    /* Error message if success = false */
    pb_callback_t error_message;
} questnav_protos_commands_ProtobufQuestNavCommandResponse;


/* Helper constants for enums */
#define _questnav_protos_commands_QuestNavCommandType_MIN questnav_protos_commands_QuestNavCommandType_COMMAND_TYPE_UNSPECIFIED
#define _questnav_protos_commands_QuestNavCommandType_MAX questnav_protos_commands_QuestNavCommandType_POSE_RESET
#define _questnav_protos_commands_QuestNavCommandType_ARRAYSIZE ((questnav_protos_commands_QuestNavCommandType)(questnav_protos_commands_QuestNavCommandType_POSE_RESET+1))


#define questnav_protos_commands_ProtobufQuestNavCommand_type_ENUMTYPE questnav_protos_commands_QuestNavCommandType



/* Initializer values for message structs */
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_init_default {{{NULL}, NULL}}
#define questnav_protos_commands_ProtobufQuestNavCommand_init_default {_questnav_protos_commands_QuestNavCommandType_MIN, 0, 0, {{{NULL}, NULL}}}
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_init_default {0, 0, {{NULL}, NULL}}
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_init_zero {{{NULL}, NULL}}
#define questnav_protos_commands_ProtobufQuestNavCommand_init_zero {_questnav_protos_commands_QuestNavCommandType_MIN, 0, 0, {{{NULL}, NULL}}}
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_init_zero {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_target_pose_tag 1
#define questnav_protos_commands_ProtobufQuestNavCommand_type_tag 1
#define questnav_protos_commands_ProtobufQuestNavCommand_command_id_tag 2
#define questnav_protos_commands_ProtobufQuestNavCommand_pose_reset_payload_tag 10
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_command_id_tag 1
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_success_tag 2
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_error_message_tag 3

/* Struct field encoding specification for nanopb */
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, MESSAGE,  target_pose,       1)
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_CALLBACK pb_default_field_callback
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_DEFAULT NULL
#define questnav_protos_commands_ProtobufQuestNavPoseResetPayload_target_pose_MSGTYPE wpi_proto_ProtobufPose2d

#define questnav_protos_commands_ProtobufQuestNavCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   command_id,        2) \
X(a, CALLBACK, ONEOF,    MESSAGE,  (payload,pose_reset_payload,payload.pose_reset_payload),  10)
#define questnav_protos_commands_ProtobufQuestNavCommand_CALLBACK pb_default_field_callback
#define questnav_protos_commands_ProtobufQuestNavCommand_DEFAULT NULL
#define questnav_protos_commands_ProtobufQuestNavCommand_payload_pose_reset_payload_MSGTYPE questnav_protos_commands_ProtobufQuestNavPoseResetPayload

#define questnav_protos_commands_ProtobufQuestNavCommandResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   command_id,        1) \
X(a, STATIC,   SINGULAR, BOOL,     success,           2) \
X(a, CALLBACK, SINGULAR, STRING,   error_message,     3)
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_CALLBACK pb_default_field_callback
#define questnav_protos_commands_ProtobufQuestNavCommandResponse_DEFAULT NULL

/* Maximum encoded size of messages (where known) */
/* questnav_protos_commands_ProtobufQuestNavPoseResetPayload_size depends on runtime parameters */
/* questnav_protos_commands_ProtobufQuestNavCommand_size depends on runtime parameters */
/* questnav_protos_commands_ProtobufQuestNavCommandResponse_size depends on runtime parameters */


#endif
