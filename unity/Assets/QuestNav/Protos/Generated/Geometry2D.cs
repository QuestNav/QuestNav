// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: geometry2d.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Wpi.Proto {

  /// <summary>Holder for reflection information generated from geometry2d.proto</summary>
  public static partial class Geometry2DReflection {

    #region Descriptor
    /// <summary>File descriptor for geometry2d.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Geometry2DReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBnZW9tZXRyeTJkLnByb3RvEgl3cGkucHJvdG8iLQoVUHJvdG9idWZUcmFu",
            "c2xhdGlvbjJkEgkKAXgYASABKAESCQoBeRgCIAEoASIjChJQcm90b2J1ZlJv",
            "dGF0aW9uMmQSDQoFdmFsdWUYASABKAEieAoOUHJvdG9idWZQb3NlMmQSNQoL",
            "dHJhbnNsYXRpb24YASABKAsyIC53cGkucHJvdG8uUHJvdG9idWZUcmFuc2xh",
            "dGlvbjJkEi8KCHJvdGF0aW9uGAIgASgLMh0ud3BpLnByb3RvLlByb3RvYnVm",
            "Um90YXRpb24yZCJ9ChNQcm90b2J1ZlRyYW5zZm9ybTJkEjUKC3RyYW5zbGF0",
            "aW9uGAEgASgLMiAud3BpLnByb3RvLlByb3RvYnVmVHJhbnNsYXRpb24yZBIv",
            "Cghyb3RhdGlvbhgCIAEoCzIdLndwaS5wcm90by5Qcm90b2J1ZlJvdGF0aW9u",
            "MmQiOQoPUHJvdG9idWZUd2lzdDJkEgoKAmR4GAEgASgBEgoKAmR5GAIgASgB",
            "Eg4KBmR0aGV0YRgDIAEoASJgChNQcm90b2J1ZlJlY3RhbmdsZTJkEikKBmNl",
            "bnRlchgBIAEoCzIZLndwaS5wcm90by5Qcm90b2J1ZlBvc2UyZBIOCgZ4V2lk",
            "dGgYAiABKAESDgoGeVdpZHRoGAMgASgBImQKEVByb3RvYnVmRWxsaXBzZTJk",
            "EikKBmNlbnRlchgBIAEoCzIZLndwaS5wcm90by5Qcm90b2J1ZlBvc2UyZBIR",
            "Cgl4U2VtaUF4aXMYAiABKAESEQoJeVNlbWlBeGlzGAMgASgBQhoKGGVkdS53",
            "cGkuZmlyc3QubWF0aC5wcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufTranslation2d), global::Wpi.Proto.ProtobufTranslation2d.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufRotation2d), global::Wpi.Proto.ProtobufRotation2d.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufPose2d), global::Wpi.Proto.ProtobufPose2d.Parser, new[]{ "Translation", "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufTransform2d), global::Wpi.Proto.ProtobufTransform2d.Parser, new[]{ "Translation", "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufTwist2d), global::Wpi.Proto.ProtobufTwist2d.Parser, new[]{ "Dx", "Dy", "Dtheta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufRectangle2d), global::Wpi.Proto.ProtobufRectangle2d.Parser, new[]{ "Center", "XWidth", "YWidth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wpi.Proto.ProtobufEllipse2d), global::Wpi.Proto.ProtobufEllipse2d.Parser, new[]{ "Center", "XSemiAxis", "YSemiAxis" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// Represents a 2D translation (displacement) vector.
  /// 
  /// This message encodes a 2D displacement or position vector using Cartesian
  /// coordinates. It's used as a building block for more complex geometric
  /// representations like poses and transforms.
  /// 
  /// Applications:
  /// - Robot position on field
  /// - Displacement between two points
  /// - Velocity vectors (when representing change in position)
  /// - Waypoint coordinates
  /// 
  /// Coordinate System:
  /// - X: Forward/backward displacement (positive = forward)
  /// - Y: Left/right displacement (positive = left)
  /// - Units: meters
  /// </summary>
  public sealed partial class ProtobufTranslation2d : pb::IMessage<ProtobufTranslation2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufTranslation2d> _parser = new pb::MessageParser<ProtobufTranslation2d>(() => new ProtobufTranslation2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufTranslation2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTranslation2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTranslation2d(ProtobufTranslation2d other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTranslation2d Clone() {
      return new ProtobufTranslation2d(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    /// <summary>
    ///
    /// X-coordinate (forward/backward displacement).
    /// 
    /// Positive values indicate forward direction (towards opposing alliance).
    /// Negative values indicate backward direction.
    /// Units: meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    /// <summary>
    ///
    /// Y-coordinate (left/right displacement).
    /// 
    /// Positive values indicate leftward direction (when facing forward).
    /// Negative values indicate rightward direction.
    /// Units: meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufTranslation2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufTranslation2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufTranslation2d other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a 2D rotation angle.
  /// 
  /// This message encodes a rotation in the 2D plane using a single angle value.
  /// It follows the standard mathematical convention for angle measurement and
  /// is used to represent orientations and rotational displacements.
  /// 
  /// Applications:
  /// - Robot heading/orientation on field
  /// - Rotational component of poses and transforms
  /// - Angular displacement between orientations
  /// - Waypoint headings
  /// 
  /// Angle Convention:
  /// - 0 radians: Facing positive X direction (forward on field)
  /// - π/2 radians: Facing positive Y direction (left on field)
  /// - π radians: Facing negative X direction (backward on field)
  /// - 3π/2 radians: Facing negative Y direction (right on field)
  /// - Counter-clockwise rotation is positive
  /// </summary>
  public sealed partial class ProtobufRotation2d : pb::IMessage<ProtobufRotation2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufRotation2d> _parser = new pb::MessageParser<ProtobufRotation2d>(() => new ProtobufRotation2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufRotation2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRotation2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRotation2d(ProtobufRotation2d other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRotation2d Clone() {
      return new ProtobufRotation2d(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    /// <summary>
    ///
    /// Rotation angle in radians.
    /// 
    /// The angle is measured counter-clockwise from the positive X-axis.
    /// Range: Typically -π to π, but can represent any angle value.
    /// 
    /// Examples:
    /// - 0.0: Facing forward (positive X)
    /// - π/2: Facing left (positive Y)
    /// - π: Facing backward (negative X)
    /// - -π/2 or 3π/2: Facing right (negative Y)
    /// 
    /// Units: radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufRotation2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufRotation2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufRotation2d other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a complete 2D pose (position and orientation).
  /// 
  /// This message combines a 2D position (translation) with a 2D orientation
  /// (rotation) to fully describe an object's pose in the 2D plane. This is
  /// the fundamental representation for robot poses in WPILib and QuestNav.
  /// 
  /// A pose answers two questions:
  /// 1. Where is the object? (translation component)
  /// 2. Which direction is it facing? (rotation component)
  /// 
  /// Applications:
  /// - Robot pose on field (primary use in QuestNav)
  /// - Waypoint targets for path following
  /// - Relative poses between objects
  /// - Initial poses for localization
  /// 
  /// The pose represents the robot's coordinate frame relative to the field
  /// coordinate frame, allowing transformation of points between the two systems.
  /// </summary>
  public sealed partial class ProtobufPose2d : pb::IMessage<ProtobufPose2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufPose2d> _parser = new pb::MessageParser<ProtobufPose2d>(() => new ProtobufPose2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufPose2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufPose2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufPose2d(ProtobufPose2d other) : this() {
      translation_ = other.translation_ != null ? other.translation_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufPose2d Clone() {
      return new ProtobufPose2d(this);
    }

    /// <summary>Field number for the "translation" field.</summary>
    public const int TranslationFieldNumber = 1;
    private global::Wpi.Proto.ProtobufTranslation2d translation_;
    /// <summary>
    ///
    /// Position component of the pose.
    /// 
    /// This specifies where the robot is located on the field using the
    /// field coordinate system. The translation represents the position of
    /// the robot's coordinate frame origin (typically the robot center).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufTranslation2d Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 2;
    private global::Wpi.Proto.ProtobufRotation2d rotation_;
    /// <summary>
    ///
    /// Orientation component of the pose.
    /// 
    /// This specifies which direction the robot is facing on the field.
    /// The rotation represents the angle between the robot's forward direction
    /// and the field's positive X-axis (forward direction).
    /// 
    /// Combined with translation, this fully defines the robot's pose and
    /// allows for coordinate transformations between robot and field frames.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufRotation2d Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufPose2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufPose2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Translation, other.Translation)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (translation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Translation);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (translation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Translation);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufPose2d other) {
      if (other == null) {
        return;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          Translation = new global::Wpi.Proto.ProtobufTranslation2d();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Wpi.Proto.ProtobufRotation2d();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (translation_ == null) {
              Translation = new global::Wpi.Proto.ProtobufTranslation2d();
            }
            input.ReadMessage(Translation);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Wpi.Proto.ProtobufRotation2d();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (translation_ == null) {
              Translation = new global::Wpi.Proto.ProtobufTranslation2d();
            }
            input.ReadMessage(Translation);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Wpi.Proto.ProtobufRotation2d();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a 2D coordinate transformation.
  /// 
  /// This message describes how to transform coordinates from one 2D coordinate
  /// frame to another. It combines a translation and rotation to define the
  /// relationship between two coordinate systems.
  /// 
  /// Mathematical Interpretation:
  /// Given a point P in frame A, the corresponding point in frame B is:
  /// P_B = Transform2d * P_A = Rotation * P_A + Translation
  /// 
  /// Applications:
  /// - Transform between robot and field coordinate frames
  /// - Relative positioning between objects
  /// - Coordinate frame conversions in path planning
  /// - Sensor calibration and mounting offsets
  /// 
  /// The transform represents "how to get from frame A to frame B" and can be
  /// inverted to get the reverse transformation.
  /// </summary>
  public sealed partial class ProtobufTransform2d : pb::IMessage<ProtobufTransform2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufTransform2d> _parser = new pb::MessageParser<ProtobufTransform2d>(() => new ProtobufTransform2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufTransform2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTransform2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTransform2d(ProtobufTransform2d other) : this() {
      translation_ = other.translation_ != null ? other.translation_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTransform2d Clone() {
      return new ProtobufTransform2d(this);
    }

    /// <summary>Field number for the "translation" field.</summary>
    public const int TranslationFieldNumber = 1;
    private global::Wpi.Proto.ProtobufTranslation2d translation_;
    /// <summary>
    ///
    /// Translation component of the transformation.
    /// 
    /// This represents the displacement between the origins of the two
    /// coordinate frames. It specifies how far and in which direction
    /// the target frame's origin is from the source frame's origin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufTranslation2d Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 2;
    private global::Wpi.Proto.ProtobufRotation2d rotation_;
    /// <summary>
    ///
    /// Rotation component of the transformation.
    /// 
    /// This represents the angular difference between the two coordinate
    /// frames. It specifies how much the target frame is rotated relative
    /// to the source frame.
    /// 
    /// The rotation is applied before the translation in the transformation
    /// sequence (standard mathematical convention).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufRotation2d Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufTransform2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufTransform2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Translation, other.Translation)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (translation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Translation);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (translation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Translation);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufTransform2d other) {
      if (other == null) {
        return;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          Translation = new global::Wpi.Proto.ProtobufTranslation2d();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Wpi.Proto.ProtobufRotation2d();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (translation_ == null) {
              Translation = new global::Wpi.Proto.ProtobufTranslation2d();
            }
            input.ReadMessage(Translation);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Wpi.Proto.ProtobufRotation2d();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (translation_ == null) {
              Translation = new global::Wpi.Proto.ProtobufTranslation2d();
            }
            input.ReadMessage(Translation);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Wpi.Proto.ProtobufRotation2d();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a 2D twist (velocity in 2D space).
  /// 
  /// This message encodes the instantaneous velocity of an object in 2D space,
  /// including both linear and angular velocity components. It describes how
  /// an object's pose is changing over time.
  /// 
  /// Mathematical Interpretation:
  /// The twist represents the time derivative of pose:
  /// - dx/dt: Rate of change in X position
  /// - dy/dt: Rate of change in Y position  
  /// - dθ/dt: Rate of change in orientation
  /// 
  /// Applications:
  /// - Robot velocity commands for motion control
  /// - Velocity feedback from odometry systems
  /// - Velocity constraints in path planning
  /// - Dynamic modeling and simulation
  /// 
  /// Coordinate Frame:
  /// The twist can be expressed in different coordinate frames (robot-relative
  /// or field-relative) depending on the application context.
  /// </summary>
  public sealed partial class ProtobufTwist2d : pb::IMessage<ProtobufTwist2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufTwist2d> _parser = new pb::MessageParser<ProtobufTwist2d>(() => new ProtobufTwist2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufTwist2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTwist2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTwist2d(ProtobufTwist2d other) : this() {
      dx_ = other.dx_;
      dy_ = other.dy_;
      dtheta_ = other.dtheta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufTwist2d Clone() {
      return new ProtobufTwist2d(this);
    }

    /// <summary>Field number for the "dx" field.</summary>
    public const int DxFieldNumber = 1;
    private double dx_;
    /// <summary>
    ///
    /// Linear velocity in X direction.
    /// 
    /// Rate of change of X position over time. In field coordinates,
    /// this represents forward/backward velocity.
    /// 
    /// Positive values: Moving in positive X direction (forward)
    /// Negative values: Moving in negative X direction (backward)
    /// Units: meters per second
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Dx {
      get { return dx_; }
      set {
        dx_ = value;
      }
    }

    /// <summary>Field number for the "dy" field.</summary>
    public const int DyFieldNumber = 2;
    private double dy_;
    /// <summary>
    ///
    /// Linear velocity in Y direction.
    /// 
    /// Rate of change of Y position over time. In field coordinates,
    /// this represents left/right velocity (strafing).
    /// 
    /// Positive values: Moving in positive Y direction (left)
    /// Negative values: Moving in negative Y direction (right)
    /// Units: meters per second
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Dy {
      get { return dy_; }
      set {
        dy_ = value;
      }
    }

    /// <summary>Field number for the "dtheta" field.</summary>
    public const int DthetaFieldNumber = 3;
    private double dtheta_;
    /// <summary>
    ///
    /// Angular velocity (rate of rotation).
    /// 
    /// Rate of change of orientation over time. This represents how
    /// fast the object is rotating in the 2D plane.
    /// 
    /// Positive values: Counter-clockwise rotation
    /// Negative values: Clockwise rotation
    /// Units: radians per second
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Dtheta {
      get { return dtheta_; }
      set {
        dtheta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufTwist2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufTwist2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Dx, other.Dx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Dy, other.Dy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Dtheta, other.Dtheta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Dx != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Dx);
      if (Dy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Dy);
      if (Dtheta != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Dtheta);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Dx != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Dx);
      }
      if (Dy != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Dy);
      }
      if (Dtheta != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Dtheta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Dx != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Dx);
      }
      if (Dy != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Dy);
      }
      if (Dtheta != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Dtheta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Dx != 0D) {
        size += 1 + 8;
      }
      if (Dy != 0D) {
        size += 1 + 8;
      }
      if (Dtheta != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufTwist2d other) {
      if (other == null) {
        return;
      }
      if (other.Dx != 0D) {
        Dx = other.Dx;
      }
      if (other.Dy != 0D) {
        Dy = other.Dy;
      }
      if (other.Dtheta != 0D) {
        Dtheta = other.Dtheta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Dx = input.ReadDouble();
            break;
          }
          case 17: {
            Dy = input.ReadDouble();
            break;
          }
          case 25: {
            Dtheta = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Dx = input.ReadDouble();
            break;
          }
          case 17: {
            Dy = input.ReadDouble();
            break;
          }
          case 25: {
            Dtheta = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a 2D rectangle with arbitrary orientation.
  /// 
  /// This message defines a rectangular region in 2D space using a center pose
  /// and width/height dimensions. The rectangle can be rotated to any orientation
  /// based on the center pose's rotation component.
  /// 
  /// Geometric Properties:
  /// - Center point and orientation defined by pose
  /// - Width extends along the pose's X-axis (local forward direction)
  /// - Height extends along the pose's Y-axis (local left direction)
  /// - Total area = xWidth * yWidth
  /// 
  /// Applications:
  /// - Robot footprint representation
  /// - Obstacle and keep-out zone definitions
  /// - Field element boundaries
  /// - Collision detection regions
  /// - Path planning constraints
  /// </summary>
  public sealed partial class ProtobufRectangle2d : pb::IMessage<ProtobufRectangle2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufRectangle2d> _parser = new pb::MessageParser<ProtobufRectangle2d>(() => new ProtobufRectangle2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufRectangle2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRectangle2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRectangle2d(ProtobufRectangle2d other) : this() {
      center_ = other.center_ != null ? other.center_.Clone() : null;
      xWidth_ = other.xWidth_;
      yWidth_ = other.yWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufRectangle2d Clone() {
      return new ProtobufRectangle2d(this);
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 1;
    private global::Wpi.Proto.ProtobufPose2d center_;
    /// <summary>
    ///
    /// Center pose of the rectangle.
    /// 
    /// The translation component specifies the center point of the rectangle
    /// in the coordinate system. The rotation component specifies the
    /// orientation of the rectangle's local coordinate frame.
    /// 
    /// The rectangle's edges are aligned with this local coordinate frame:
    /// - Width extends along local X-axis (rotated forward direction)
    /// - Height extends along local Y-axis (rotated left direction)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufPose2d Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "xWidth" field.</summary>
    public const int XWidthFieldNumber = 2;
    private double xWidth_;
    /// <summary>
    ///
    /// Width of the rectangle along its local X-axis.
    /// 
    /// This is the dimension of the rectangle in the direction of the
    /// center pose's forward direction (after rotation). The rectangle
    /// extends ±xWidth/2 from the center along this axis.
    /// 
    /// Units: meters
    /// Must be positive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XWidth {
      get { return xWidth_; }
      set {
        xWidth_ = value;
      }
    }

    /// <summary>Field number for the "yWidth" field.</summary>
    public const int YWidthFieldNumber = 3;
    private double yWidth_;
    /// <summary>
    ///
    /// Height of the rectangle along its local Y-axis.
    /// 
    /// This is the dimension of the rectangle in the direction of the
    /// center pose's left direction (after rotation). The rectangle
    /// extends ±yWidth/2 from the center along this axis.
    /// 
    /// Units: meters
    /// Must be positive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YWidth {
      get { return yWidth_; }
      set {
        yWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufRectangle2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufRectangle2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Center, other.Center)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XWidth, other.XWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YWidth, other.YWidth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (center_ != null) hash ^= Center.GetHashCode();
      if (XWidth != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XWidth);
      if (YWidth != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YWidth);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (center_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Center);
      }
      if (XWidth != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XWidth);
      }
      if (YWidth != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (center_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Center);
      }
      if (XWidth != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XWidth);
      }
      if (YWidth != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (center_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
      }
      if (XWidth != 0D) {
        size += 1 + 8;
      }
      if (YWidth != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufRectangle2d other) {
      if (other == null) {
        return;
      }
      if (other.center_ != null) {
        if (center_ == null) {
          Center = new global::Wpi.Proto.ProtobufPose2d();
        }
        Center.MergeFrom(other.Center);
      }
      if (other.XWidth != 0D) {
        XWidth = other.XWidth;
      }
      if (other.YWidth != 0D) {
        YWidth = other.YWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (center_ == null) {
              Center = new global::Wpi.Proto.ProtobufPose2d();
            }
            input.ReadMessage(Center);
            break;
          }
          case 17: {
            XWidth = input.ReadDouble();
            break;
          }
          case 25: {
            YWidth = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (center_ == null) {
              Center = new global::Wpi.Proto.ProtobufPose2d();
            }
            input.ReadMessage(Center);
            break;
          }
          case 17: {
            XWidth = input.ReadDouble();
            break;
          }
          case 25: {
            YWidth = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents a 2D ellipse with arbitrary orientation.
  /// 
  /// This message defines an elliptical region in 2D space using a center pose
  /// and semi-axis lengths. The ellipse can be rotated to any orientation
  /// based on the center pose's rotation component.
  /// 
  /// Geometric Properties:
  /// - Center point and orientation defined by pose
  /// - Major/minor axes aligned with pose's local coordinate frame
  /// - X semi-axis extends along pose's X-axis (local forward direction)
  /// - Y semi-axis extends along pose's Y-axis (local left direction)
  /// - Total area = π * xSemiAxis * ySemiAxis
  /// 
  /// Applications:
  /// - Uncertainty ellipses for localization
  /// - Smooth obstacle representations
  /// - Robot operating regions
  /// - Sensor coverage areas
  /// - Path planning with uncertainty
  /// 
  /// Special Cases:
  /// - Circle: xSemiAxis = ySemiAxis
  /// - Degenerate ellipse: one semi-axis approaches zero (becomes a line)
  /// </summary>
  public sealed partial class ProtobufEllipse2d : pb::IMessage<ProtobufEllipse2d>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufEllipse2d> _parser = new pb::MessageParser<ProtobufEllipse2d>(() => new ProtobufEllipse2d());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufEllipse2d> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wpi.Proto.Geometry2DReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEllipse2d() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEllipse2d(ProtobufEllipse2d other) : this() {
      center_ = other.center_ != null ? other.center_.Clone() : null;
      xSemiAxis_ = other.xSemiAxis_;
      ySemiAxis_ = other.ySemiAxis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEllipse2d Clone() {
      return new ProtobufEllipse2d(this);
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 1;
    private global::Wpi.Proto.ProtobufPose2d center_;
    /// <summary>
    ///
    /// Center pose of the ellipse.
    /// 
    /// The translation component specifies the center point of the ellipse
    /// in the coordinate system. The rotation component specifies the
    /// orientation of the ellipse's local coordinate frame.
    /// 
    /// The ellipse's axes are aligned with this local coordinate frame:
    /// - X semi-axis extends along local X-axis (rotated forward direction)
    /// - Y semi-axis extends along local Y-axis (rotated left direction)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Wpi.Proto.ProtobufPose2d Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "xSemiAxis" field.</summary>
    public const int XSemiAxisFieldNumber = 2;
    private double xSemiAxis_;
    /// <summary>
    ///
    /// Semi-axis length along the ellipse's local X-axis.
    /// 
    /// This is half the width of the ellipse in the direction of the
    /// center pose's forward direction (after rotation). The ellipse
    /// extends ±xSemiAxis from the center along this axis.
    /// 
    /// Units: meters
    /// Must be positive
    /// 
    /// Note: This is the semi-axis, not the full width. The full width
    /// along this axis is 2 * xSemiAxis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double XSemiAxis {
      get { return xSemiAxis_; }
      set {
        xSemiAxis_ = value;
      }
    }

    /// <summary>Field number for the "ySemiAxis" field.</summary>
    public const int YSemiAxisFieldNumber = 3;
    private double ySemiAxis_;
    /// <summary>
    ///
    /// Semi-axis length along the ellipse's local Y-axis.
    /// 
    /// This is half the height of the ellipse in the direction of the
    /// center pose's left direction (after rotation). The ellipse
    /// extends ±ySemiAxis from the center along this axis.
    /// 
    /// Units: meters
    /// Must be positive
    /// 
    /// Note: This is the semi-axis, not the full height. The full height
    /// along this axis is 2 * ySemiAxis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double YSemiAxis {
      get { return ySemiAxis_; }
      set {
        ySemiAxis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufEllipse2d);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufEllipse2d other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Center, other.Center)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(XSemiAxis, other.XSemiAxis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(YSemiAxis, other.YSemiAxis)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (center_ != null) hash ^= Center.GetHashCode();
      if (XSemiAxis != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(XSemiAxis);
      if (YSemiAxis != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(YSemiAxis);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (center_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Center);
      }
      if (XSemiAxis != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XSemiAxis);
      }
      if (YSemiAxis != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YSemiAxis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (center_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Center);
      }
      if (XSemiAxis != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(XSemiAxis);
      }
      if (YSemiAxis != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(YSemiAxis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (center_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
      }
      if (XSemiAxis != 0D) {
        size += 1 + 8;
      }
      if (YSemiAxis != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufEllipse2d other) {
      if (other == null) {
        return;
      }
      if (other.center_ != null) {
        if (center_ == null) {
          Center = new global::Wpi.Proto.ProtobufPose2d();
        }
        Center.MergeFrom(other.Center);
      }
      if (other.XSemiAxis != 0D) {
        XSemiAxis = other.XSemiAxis;
      }
      if (other.YSemiAxis != 0D) {
        YSemiAxis = other.YSemiAxis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (center_ == null) {
              Center = new global::Wpi.Proto.ProtobufPose2d();
            }
            input.ReadMessage(Center);
            break;
          }
          case 17: {
            XSemiAxis = input.ReadDouble();
            break;
          }
          case 25: {
            YSemiAxis = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (center_ == null) {
              Center = new global::Wpi.Proto.ProtobufPose2d();
            }
            input.ReadMessage(Center);
            break;
          }
          case 17: {
            XSemiAxis = input.ReadDouble();
            break;
          }
          case 25: {
            YSemiAxis = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
